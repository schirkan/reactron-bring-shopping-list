{"version":3,"file":"bundle.server.js","sources":["../src/server/services/BringService.ts","../src/server/index.ts"],"sourcesContent":["import { IReactronServiceContext } from '@schirkan/reactron-interfaces';\r\nimport * as request from 'request-promise-native';\r\nimport { IBringService } from '../../../src/common/interfaces/IBringService';\r\nimport { IBringServiceOptions } from '../../../src/common/interfaces/IBringServiceOptions';\r\nimport { IShoppingList } from '../../../src/common/interfaces/IShoppingList';\r\n\r\ninterface ICacheItem {\r\n  url: string;\r\n  timestamp: number;\r\n  result: any;\r\n}\r\n\r\nconst bringApiUrl = \"https://api.getbring.com/rest/\";\r\n\r\n// Service to access the WUnderground API\r\nexport class BringService implements IBringService {\r\n  private options: IBringServiceOptions;\r\n  private context: IReactronServiceContext\r\n  private cache: { [url: string]: ICacheItem } = {};\r\n\r\n  public async start(context: IReactronServiceContext): Promise<void> {\r\n    this.context = context;\r\n    console.log('BringService.start()');\r\n  }\r\n\r\n  public async stop(): Promise<void> {\r\n    console.log('BringService.stop()');\r\n  }\r\n\r\n  public async setOptions(options: IBringServiceOptions): Promise<void> {\r\n    console.log('BringService.setOptions()');\r\n    this.options = options;\r\n  }\r\n\r\n  public getOptions(): Readonly<IBringServiceOptions> {\r\n    return this.options;\r\n  }\r\n\r\n  public async getList(): Promise<IShoppingList> {\r\n    const loginReponse = await this.login();\r\n\r\n    this.bringUUID = loginReponse.uuid;\r\n    this.bringListUUID = loginReponse.bringListUUID;\r\n\r\n    console.log('loginReponse', loginReponse);\r\n    console.log('bringUUID', this.bringUUID);\r\n    console.log('bringListUUID', this.bringListUUID);\r\n\r\n    if (!this.bringUUID) {\r\n      return {\r\n        uuid: 'test',\r\n        name: 'Liste 1',\r\n        items: [\r\n          { name: 'Salami' },\r\n          { name: 'KÃ¤se' },\r\n        ]\r\n      };\r\n    }\r\n\r\n    const list = await this.getItems();\r\n    console.log('list', list);\r\n\r\n    return {\r\n      uuid: list.uuid,\r\n      name: '',\r\n      items: list.purchase\r\n    }\r\n\r\n    // const response = await request.get('', { json: true, resolveWithFullResponse: true }) as request.FullResponse;\r\n    // return response;\r\n  }\r\n\r\n  private bringUUID = \"\";\r\n  private bringListUUID = \"\";\r\n\r\n  // public __construct(UUID,listUUID, useLogin = false)\r\n  // {\r\n  //   if(useLogin) {\r\n  //     login = json_decode(this.login(UUID,listUUID),true);\r\n  //     if(this.answerHttpStatus == 200 && login != \"\") {\r\n  //       this.bringUUID = login['uuid'];\r\n  //       this.bringListUUID = login['bringListUUID'];\r\n  //     } else {\r\n  //       die(\"Wrong Login!\");\r\n  //     }\r\n  //   } else {\r\n  //     this.bringUUID = UUID;\r\n  //     this.bringListUUID = listUUID;\r\n  //   }\r\n  // }\r\n\r\n  private login() {\r\n    return this.getResponse('get', \"bringlists/\", \"?email=\" + this.options.username + \"&password=\" + this.options.password, false);\r\n  }\r\n\r\n  // Get all items from the current selected shopping list\r\n  private getItems() {\r\n    return this.getResponse('get', \"v2/bringlists/\" + this.bringListUUID);\r\n  }\r\n\r\n  // Save an item to your current shopping list\r\n  // private saveItem(itemName: string, specification?: string) {\r\n  //   return this.getResponse('put', \"bringlists/\" + this.bringListUUID, \"purchase=\" + itemName + \"&recently=&specification=\" + specification + \"&remove=&sender=null\");\r\n  // }\r\n\r\n  // // remove an item from your current shopping list\r\n  // private removeItem(itemName: string) {\r\n  //   return this.getResponse('put', \"bringlists/\" + this.bringListUUID, \"purchase=&recently=&specification=&remove=\" + itemName + \"&sender=null\");\r\n  // }\r\n\r\n  // // Search for an item\r\n  // private searchItem(search: string) {\r\n  //   return this.getResponse('get', \"bringlistitemdetails/\", \"?listUuid=\" + this.bringListUUID + \"&itemId=\" + search);\r\n  // }\r\n\r\n  // // Hidden Icons? Don't know what this is used for\r\n  // private loadProducts() {\r\n  //   return this.getResponse('get', \"bringproducts\");\r\n  // }\r\n\r\n  // // Found Icons? Don't know what this is used for\r\n  // private loadFeatures() {\r\n  //   return this.getResponse('get', \"bringusers/\" + this.bringUUID + \"/features\");\r\n  // }\r\n\r\n  // // Loads all shopping lists\r\n  // private loadLists() {\r\n  //   return this.getResponse('get', \"bringusers/\" + this.bringUUID + \"/lists\");\r\n  // }\r\n\r\n  // // Get all users from a shopping list\r\n  // private getAllUsersFromList(listUUID: string) {\r\n  //   return this.getResponse('get', \"bringlists/\" + listUUID + \"/users\");\r\n  // }\r\n\r\n  // private getUserSettings() {\r\n  //   return this.getResponse('get', \"bringusersettings/\" + this.bringUUID);\r\n  // }\r\n\r\n  // Handles the request to the server\r\n  // private request(method: string, url: string, parameter: string, customHeader = false) {\r\n  // ch = curl_init();\r\n  // additionalHeaderInfo = \"\";\r\n  // switch (method) {\r\n  //   case 'get':\r\n  //     curl_setopt(ch, CURLOPT_URL, this.bringRestURL.request.parameter);\r\n  //     break;\r\n  //   case 'post':\r\n  //     curl_setopt(ch, CURLOPT_URL, this.bringRestURL.request);\r\n  //     curl_setopt(ch, CURLOPT_POST, true);\r\n  //     curl_setopt(ch, CURLOPT_POSTFIELDS, parameter);\r\n  //     break;\r\n  //   case 'put':\r\n  //     fh = tmpfile();\r\n  //     fwrite(fh, parameter);\r\n  //     fseek(fh, 0);\r\n  //     curl_setopt(ch, CURLOPT_URL, this.bringRestURL.request);\r\n  //     curl_setopt(ch, CURLOPT_PUT, true);\r\n  //     curl_setopt(ch, CURLOPT_INFILE, fh);\r\n  //     curl_setopt(ch, CURLOPT_INFILESIZE, strlen(parameter));\r\n  //     additionalHeaderInfo = 'Content-Type: application/x-www-form-urlencoded; charset=UTF-8';\r\n  //     break;\r\n  // }\r\n  // curl_setopt(ch, CURLOPT_RETURNTRANSFER, true);\r\n  // if (customHeader) {\r\n  //   curl_setopt(ch, CURLOPT_HTTPHEADER, this.getHeader((additionalHeaderInfo != \"\") ? additionalHeaderInfo : null));\r\n  // }\r\n  // server_output = curl_exec(ch);\r\n  // this.answerHttpStatus = curl_getinfo(ch, CURLINFO_HTTP_CODE);\r\n  // curl_close(ch);\r\n\r\n  // return server_output;\r\n  // }\r\n\r\n  private getHeader() {\r\n    const header = {\r\n      'X-BRING-API-KEY': 'cof4Nc6D8saplXjE3h3HXqHH8m7VU2i1Gs0g85Sp',\r\n      'X-BRING-CLIENT': 'android',\r\n      'X-BRING-USER-UUID': this.bringUUID,\r\n      'X-BRING-VERSION': '303070050',\r\n      'X-BRING-COUNTRY': 'de',\r\n    };\r\n    return header;\r\n  }\r\n\r\n  private async getResponse(method: 'get' | 'put' | 'post', url: string, parameter?: string, sendHeader: boolean = true): Promise<any> {\r\n    console.log('BringService.' + method + '(' + url + ')');\r\n    const now = Date.now();\r\n    const validCacheTime = now - (this.options.cacheDuration * 60 * 1000);\r\n\r\n    url = bringApiUrl + url;\r\n    if (method === 'get') {\r\n      url += parameter;\r\n    }\r\n\r\n    // check timestamp - only cache get requests\r\n    if (method !== 'get' || this.cache[url] && this.cache[url].timestamp < validCacheTime) {\r\n      delete (this.cache[url]);\r\n    }\r\n\r\n    if (!this.cache[url]) {\r\n      const requestOptions: request.RequestPromiseOptions = {\r\n        json: true,\r\n        resolveWithFullResponse: true,\r\n        rejectUnauthorized: false,\r\n        headers: sendHeader ? this.getHeader() : {},\r\n        body: method !== 'get' ? parameter : undefined\r\n      };\r\n      let response: request.FullResponse | undefined;\r\n\r\n      switch (method) {\r\n        case 'get':\r\n          response = await request.get(url, requestOptions);\r\n          break;\r\n        case 'put':\r\n          response = await request.put(url, requestOptions);\r\n          break;\r\n        case 'post':\r\n          response = await request.post(url, requestOptions);\r\n          break;\r\n      }\r\n\r\n      console.log(response && response.body);\r\n\r\n      if (!response) {\r\n        throw new Error('no response');\r\n      }\r\n\r\n      if (response.statusCode !== 200) {\r\n        throw new Error(response.statusMessage);\r\n      }\r\n\r\n      this.cache[url] = {\r\n        timestamp: now,\r\n        result: response.body,\r\n        url\r\n      };\r\n    }\r\n\r\n    return this.cache[url].result;\r\n  }\r\n}","import { IReactronServiceDefinition } from '@schirkan/reactron-interfaces';\r\nimport { BringService } from './services/BringService';\r\n\r\n// export interfaces\r\nexport * from '../common/interfaces/IBringService';\r\nexport * from '../common/interfaces/IBringServiceOptions';\r\n\r\n// export reactron service definition\r\nexport const services: IReactronServiceDefinition[] = [{\r\n    description: 'Service for getbring.com',\r\n    displayName: 'Shopping List',\r\n    fields: [{\r\n        displayName: 'Username',\r\n        description: 'Username',\r\n        name: 'username',\r\n        valueType: 'string',\r\n    }, {\r\n        displayName: 'Password',\r\n        description: 'Password',\r\n        name: 'password',\r\n        valueType: 'password',\r\n    }, {\r\n        defaultValue: 5,\r\n        description: 'Cache duration in minutes',\r\n        displayName: 'Cache duration (min)',\r\n        name: 'cacheDuration',\r\n        valueType: 'number',\r\n        minValue: 0,\r\n        maxValue: 120,\r\n        stepSize: 5\r\n    }],\r\n    name: 'BringService',\r\n    service: BringService\r\n}];"],"names":["request.get","request.put","request.post"],"mappings":"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"}