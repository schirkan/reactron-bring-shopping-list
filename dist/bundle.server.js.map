{"version":3,"file":"bundle.server.js","sources":["../src/server/services/BringService.ts","../src/server/index.ts"],"sourcesContent":["import { IReactronServiceContext } from '@schirkan/reactron-interfaces';\r\nimport * as request from 'request-promise-native';\r\nimport { IBringService } from '../../../src/common/interfaces/IBringService';\r\nimport { IBringServiceOptions } from '../../../src/common/interfaces/IBringServiceOptions';\r\nimport { IShoppingList } from '../../../src/common/interfaces/IShoppingList';\r\n\r\ninterface ICacheItem {\r\n  url: string;\r\n  timestamp: number;\r\n  result: any;\r\n}\r\n\r\ninterface IBringUserContext {\r\n  loginTimestamp: number;\r\n  name: string;\r\n  email: string;\r\n  uuid: string;\r\n  bringListUUID: string;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  photoPath: string;\r\n  publicUuid: string;\r\n  expiresIn: number;\r\n  lists: IBringList[];\r\n}\r\n\r\ninterface IBringList {\r\n  listUuid: string;\r\n  name: string;\r\n}\r\n\r\nconst bringApiUrl = \"https://api.getbring.com/rest/v2/\";\r\n\r\n// Service to access the bring API\r\nexport class BringService implements IBringService {\r\n  private options: IBringServiceOptions;\r\n  private context: IReactronServiceContext\r\n  private cache: { [url: string]: ICacheItem } = {};\r\n  private userContext?: IBringUserContext;\r\n\r\n  public async setOptions(options: IBringServiceOptions): Promise<void> {\r\n    console.log('BringService.setOptions()');\r\n    this.options = options;\r\n    this.userContext = undefined; // reset login\r\n  }\r\n\r\n  public async start(context: IReactronServiceContext): Promise<void> {\r\n    this.context = context;\r\n    console.log('BringService.start()');\r\n  }\r\n\r\n  public async stop(): Promise<void> {\r\n    console.log('BringService.stop()');\r\n  }\r\n\r\n  public getOptions(): Readonly<IBringServiceOptions> {\r\n    return this.options;\r\n  }\r\n\r\n  private async initLogin(): Promise<void> {\r\n    if (!this.userContext) {\r\n      // login\r\n      const loginReponse = await this.login();\r\n\r\n      this.userContext = {\r\n        loginTimestamp: new Date().getTime(),\r\n        name: loginReponse.name,\r\n        email: loginReponse.email,\r\n        uuid: loginReponse.uuid,\r\n        bringListUUID: loginReponse.bringListUUID,\r\n        accessToken: loginReponse.access_token,\r\n        refreshToken: loginReponse.refresh_token,\r\n        expiresIn: loginReponse.expires_in,\r\n        photoPath: loginReponse.photoPath,\r\n        publicUuid: loginReponse.publicUuid,\r\n        lists: []\r\n      };\r\n\r\n      // load lists\r\n      const getListsResponse = await this.getLists();\r\n      this.userContext.lists = getListsResponse.lists;\r\n    }\r\n  }\r\n\r\n  // Get all items from the current selected shopping list\r\n  public async getDefaultList(): Promise<IShoppingList> {\r\n    await this.initLogin();\r\n    if (!this.userContext) {\r\n      throw new Error('login failed');\r\n    }\r\n\r\n    return this.getList(this.userContext.bringListUUID);\r\n  }\r\n\r\n  public async getList(listUuid: string): Promise<IShoppingList> {\r\n    await this.initLogin();\r\n    if (!this.userContext) {\r\n      throw new Error('login failed');\r\n    }\r\n\r\n    const list = await this.getResponse('get', \"bringlists/\" + listUuid);\r\n    const listDetails = this.userContext.lists.find(x => x.listUuid === listUuid);\r\n\r\n    return {\r\n      uuid: list.uuid,\r\n      name: listDetails && listDetails.name || '-',\r\n      items: list.purchase\r\n    }\r\n  }\r\n\r\n  private login() {\r\n    if (!this.options.username || !this.options.password) {\r\n      throw new Error('Username/Password missing!');\r\n    }\r\n    return this.getResponse('post', \"bringauth\", \"email=\" + this.options.username + \"&password=\" + this.options.password);\r\n  }\r\n\r\n  private getLists() {\r\n    return this.getResponse('get', \"bringusers/\" + this.userContext!.uuid + \"/lists\");\r\n  }\r\n\r\n  // Save an item to your current shopping list\r\n  // private saveItem(itemName: string, specification?: string) {\r\n  //   return this.getResponse('put', \"bringlists/\" + this.bringListUUID, \"purchase=\" + itemName + \"&recently=&specification=\" + specification + \"&remove=&sender=null\");\r\n  // }\r\n  // // remove an item from your current shopping list\r\n  // private removeItem(itemName: string) {\r\n  //   return this.getResponse('put', \"bringlists/\" + this.bringListUUID, \"purchase=&recently=&specification=&remove=\" + itemName + \"&sender=null\");\r\n  // }\r\n  // // Search for an item\r\n  // private searchItem(search: string) {\r\n  //   return this.getResponse('get', \"bringlistitemdetails/\", \"?listUuid=\" + this.bringListUUID + \"&itemId=\" + search);\r\n  // }\r\n  // // Hidden Icons? Don't know what this is used for\r\n  // private loadProducts() {\r\n  //   return this.getResponse('get', \"bringproducts\");\r\n  // }\r\n  // // Found Icons? Don't know what this is used for\r\n  // private loadFeatures() {\r\n  //   return this.getResponse('get', \"bringusers/\" + this.bringUUID + \"/features\");\r\n  // }\r\n  // // Loads all shopping lists\r\n  // private loadLists() {\r\n  //   return this.getResponse('get', \"bringusers/\" + this.bringUUID + \"/lists\");\r\n  // }\r\n  // // Get all users from a shopping list\r\n  // private getAllUsersFromList(listUUID: string) {\r\n  //   return this.getResponse('get', \"bringlists/\" + listUUID + \"/users\");\r\n  // }\r\n  // private getUserSettings() {\r\n  //   return this.getResponse('get', \"bringusersettings/\" + this.bringUUID);\r\n  // }\r\n\r\n  private getHeader() {\r\n    // tslint:disable:no-unused-expression\r\n    // tslint:disable:no-string-literal\r\n\r\n    const header = {\r\n      'Origin': 'https://web.getbring.com',\r\n      'Referer': 'https://web.getbring.com/login',\r\n      // 'X-BRING-CLIENT-INSTANCE-ID': 'Web-xxxxxx',\r\n      'X-BRING-API-KEY': 'cof4Nc6D8saplXjE3h3HXqHH8m7VU2i1Gs0g85Sp',\r\n      'X-BRING-CLIENT': 'webApp',\r\n      'X-BRING-CLIENT-SOURCE': 'webApp',\r\n      'X-BRING-COUNTRY': 'DE',\r\n      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36',\r\n      'Accept': 'application/json, text/plain, */*'\r\n    };\r\n\r\n    if (this.userContext) {\r\n      header['X-BRING-USER-UUID'] = this.userContext.uuid;\r\n      header['Authorization'] = 'Bearer ' + this.userContext.accessToken;\r\n      header['Cookie'] = 'refresh_token=' + this.userContext.refreshToken;\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  private async getResponse(method: 'get' | 'put' | 'post', url: string, parameter?: string, sendHeader: boolean = true): Promise<any> {\r\n    console.log('BringService.' + method + '(' + url + ')');\r\n    const now = Date.now();\r\n    const validCacheTime = now - (this.options.cacheDuration * 60 * 1000);\r\n\r\n    url = bringApiUrl + url;\r\n    if (method === 'get' && parameter) {\r\n      url += parameter;\r\n    }\r\n\r\n    // check timestamp - only cache get requests\r\n    if (method !== 'get' || this.cache[url] && this.cache[url].timestamp < validCacheTime) {\r\n      delete (this.cache[url]);\r\n    }\r\n\r\n    if (!this.cache[url]) {\r\n      const requestOptions: request.RequestPromiseOptions = {\r\n        json: true,\r\n        resolveWithFullResponse: true,\r\n        rejectUnauthorized: false,\r\n        headers: sendHeader ? this.getHeader() : {},\r\n        body: method !== 'get' ? encodeURI(parameter || '') : undefined\r\n      };\r\n      let response: request.FullResponse | undefined;\r\n\r\n      try {\r\n        switch (method) {\r\n          case 'get':\r\n            response = await request.get(url, requestOptions);\r\n            break;\r\n          case 'put':\r\n            response = await request.put(url, requestOptions);\r\n            break;\r\n          case 'post':\r\n            requestOptions.headers!['Content-Type'] = 'application/x-www-form-urlencoded';\r\n            response = await request.post(url, requestOptions);\r\n            break;\r\n        }\r\n        console.log(response && response.body);\r\n      } catch (error) {\r\n        console.log(error);\r\n        throw new Error(JSON.stringify(error));\r\n      }\r\n\r\n      if (!response) {\r\n        throw new Error('no response');\r\n      }\r\n\r\n      if (response.statusCode !== 200) {\r\n        throw new Error(response.statusMessage);\r\n      }\r\n\r\n      this.cache[url] = {\r\n        timestamp: now,\r\n        result: response.body,\r\n        url\r\n      };\r\n    }\r\n\r\n    return this.cache[url].result;\r\n  }\r\n}","import { IReactronServiceDefinition } from '@schirkan/reactron-interfaces';\r\nimport { BringService } from './services/BringService';\r\n\r\n// export interfaces\r\nexport * from '../common/interfaces/IBringService';\r\nexport * from '../common/interfaces/IBringServiceOptions';\r\n\r\n// export reactron service definition\r\nexport const services: IReactronServiceDefinition[] = [{\r\n    description: 'Service for getbring.com',\r\n    displayName: 'Shopping List',\r\n    fields: [{\r\n        displayName: 'Username',\r\n        description: 'Username',\r\n        name: 'username',\r\n        valueType: 'string',\r\n    }, {\r\n        displayName: 'Password',\r\n        description: 'Password',\r\n        name: 'password',\r\n        valueType: 'password',\r\n    }, {\r\n        defaultValue: 5,\r\n        description: 'Cache duration in minutes',\r\n        displayName: 'Cache duration (min)',\r\n        name: 'cacheDuration',\r\n        valueType: 'number',\r\n        minValue: 0,\r\n        maxValue: 120,\r\n        stepSize: 5\r\n    }],\r\n    name: 'BringService',\r\n    service: BringService\r\n}];"],"names":["request.get","request.put","request.post"],"mappings":"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"}