{"version":3,"file":"bundle.server.js","sources":["../src/server/services/BringService.ts","../src/server/index.ts"],"sourcesContent":["import { IReactronServiceContext } from '@schirkan/reactron-interfaces';\r\nimport * as request from 'request-promise-native';\r\nimport { IBringService } from '../../../src/common/interfaces/IBringService';\r\nimport { IBringServiceOptions } from '../../../src/common/interfaces/IBringServiceOptions';\r\nimport { IShoppingList } from '../../../src/common/interfaces/IShoppingList';\r\n\r\ninterface ICacheItem {\r\n  url: string;\r\n  timestamp: number;\r\n  result: any;\r\n}\r\n\r\n// Service to access the WUnderground API\r\nexport class BringService implements IBringService {\r\n  private options: IBringServiceOptions;\r\n  private context: IReactronServiceContext\r\n  private cache: { [url: string]: ICacheItem } = {};\r\n\r\n  public async start(context: IReactronServiceContext): Promise<void> {\r\n    this.context = context;\r\n    console.log('BringService.start()');\r\n  }\r\n\r\n  public async stop(): Promise<void> {\r\n    console.log('BringService.stop()');\r\n  }\r\n\r\n  public async setOptions(options: IBringServiceOptions): Promise<void> {\r\n    console.log('BringService.setOptions()');\r\n    this.options = options;\r\n  }\r\n\r\n  public getOptions(): Readonly<IBringServiceOptions> {\r\n    return this.options;\r\n  }\r\n\r\n  public async getList(): Promise<IShoppingList> {\r\n    return {\r\n      uuid: 'test',\r\n      name: 'Liste 1',\r\n      items: [\r\n        { name: 'Salami' },\r\n        { name: 'KÃ¤se' },\r\n      ]\r\n    };\r\n\r\n    // const response = await request.get('', { json: true, resolveWithFullResponse: true }) as request.FullResponse;\r\n    // return response;\r\n  }\r\n\r\n  private bringRestURL = \"https://api.getbring.com/rest/\";\r\n  private bringUUID = \"\";\r\n  private bringListUUID = \"\";\r\n\r\n  // public __construct(UUID,listUUID, useLogin = false)\r\n  // {\r\n  //   if(useLogin) {\r\n  //     login = json_decode(this.login(UUID,listUUID),true);\r\n  //     if(this.answerHttpStatus == 200 && login != \"\") {\r\n  //       this.bringUUID = login['uuid'];\r\n  //       this.bringListUUID = login['bringListUUID'];\r\n  //     } else {\r\n  //       die(\"Wrong Login!\");\r\n  //     }\r\n  //   } else {\r\n  //     this.bringUUID = UUID;\r\n  //     this.bringListUUID = listUUID;\r\n  //   }\r\n  // }\r\n\r\n  private login(email: string, password: string) {\r\n    return this.request('get', \"bringlists\", \"?email=\" + email + \"&password=\" + password);\r\n  }\r\n\r\n  // Get all items from the current selected shopping list\r\n  public getItems() {\r\n    return this.request('get', \"bringlists/\" + this.bringListUUID, \"\", true);\r\n  }\r\n\r\n  // Save an item to your current shopping list\r\n  public saveItem(itemName: string, specification?: string) {\r\n    return this.request('put', \"bringlists/\" + this.bringListUUID, \"purchase=\" + itemName + \"&recently=&specification=\" + specification + \"&remove=&sender=null\", true);\r\n  }\r\n\r\n  // remove an item from your current shopping list\r\n  public removeItem(itemName: string) {\r\n    return this.request('put', \"bringlists/\" + this.bringListUUID, \"purchase=&recently=&specification=&remove=\" + itemName + \"&sender=null\", true);\r\n  }\r\n\r\n  // Search for an item\r\n  public searchItem(search: string) {\r\n    return this.request('get', \"bringlistitemdetails/\", \"?listUuid=\" + this.bringListUUID + \"&itemId=\" + search, true);\r\n  }\r\n\r\n  // Hidden Icons? Don't know what this is used for\r\n  public loadProducts() {\r\n    return this.request('get', \"bringproducts\", \"\", true);\r\n  }\r\n\r\n  // Found Icons? Don't know what this is used for\r\n  public loadFeatures() {\r\n    return this.request('get', \"bringusers/\" + this.bringUUID + \"/features\", \"\", true);\r\n  }\r\n\r\n  // Loads all shopping lists\r\n  public loadLists() {\r\n    return this.request('get', \"bringusers/\" + this.bringUUID + \"/lists\", \"\", true);\r\n  }\r\n\r\n  // Get all users from a shopping list\r\n  public getAllUsersFromList(listUUID: string) {\r\n    return this.request('get', \"bringlists/\" + listUUID + \"/users\", \"\", true);\r\n  }\r\n\r\n  public getUserSettings() {\r\n    return this.request('get', \"bringusersettings/\" + this.bringUUID, \"\", true);\r\n  }\r\n\r\n  // Handles the request to the server\r\n  private request(type: string, url: string, parameter: string, customHeader = false) {\r\n    // ch = curl_init();\r\n    // additionalHeaderInfo = \"\";\r\n    // switch (type) {\r\n    //   case 'get':\r\n    //     curl_setopt(ch, CURLOPT_URL, this.bringRestURL.request.parameter);\r\n    //     break;\r\n    //   case 'post':\r\n    //     curl_setopt(ch, CURLOPT_URL, this.bringRestURL.request);\r\n    //     curl_setopt(ch, CURLOPT_POST, true);\r\n    //     curl_setopt(ch, CURLOPT_POSTFIELDS, parameter);\r\n    //     break;\r\n    //   case 'put':\r\n    //     fh = tmpfile();\r\n    //     fwrite(fh, parameter);\r\n    //     fseek(fh, 0);\r\n    //     curl_setopt(ch, CURLOPT_URL, this.bringRestURL.request);\r\n    //     curl_setopt(ch, CURLOPT_PUT, true);\r\n    //     curl_setopt(ch, CURLOPT_INFILE, fh);\r\n    //     curl_setopt(ch, CURLOPT_INFILESIZE, strlen(parameter));\r\n    //     additionalHeaderInfo = 'Content-Type: application/x-www-form-urlencoded; charset=UTF-8';\r\n    //     break;\r\n    // }\r\n    // curl_setopt(ch, CURLOPT_RETURNTRANSFER, true);\r\n    // if (customHeader) {\r\n    //   curl_setopt(ch, CURLOPT_HTTPHEADER, this.getHeader((additionalHeaderInfo != \"\") ? additionalHeaderInfo : null));\r\n    // }\r\n    // server_output = curl_exec(ch);\r\n    // this.answerHttpStatus = curl_getinfo(ch, CURLINFO_HTTP_CODE);\r\n    // curl_close(ch);\r\n\r\n    // return server_output;\r\n  }\r\n\r\n  private getHeader() {\r\n    const header = [\r\n      'X-BRING-API-KEY: cof4Nc6D8saplXjE3h3HXqHH8m7VU2i1Gs0g85Sp',\r\n      'X-BRING-CLIENT: android',\r\n      'X-BRING-USER-UUID: ' + this.bringUUID,\r\n      'X-BRING-VERSION: 303070050',\r\n      'X-BRING-COUNTRY: de',\r\n    ];\r\n    return header;\r\n  }\r\n\r\n  // private getApiUrl(endpoint: string, location: ILocationRequest): string {\r\n  //     let url = baseUrl + endpoint\r\n  //         + '?APPID=' + this.options.apiKey\r\n  //         + '&units=' + this.options.units\r\n  //         + '&lang=' + this.context.settings.lang;\r\n\r\n  //     if (location) {\r\n  //         if (location.cityName) {\r\n  //             url += '&q=' + location.cityName;\r\n  //         }\r\n  //         if (location.zip) {\r\n  //             url += '&zip=' + location.zip;\r\n  //         }\r\n  //         if (location.coords) {\r\n  //             url += '&lon=' + location.coords.lon + '&lat=' + location.coords.lat;\r\n  //         }\r\n  //         if (location.cityId) {\r\n  //             url += '&id=' + location.cityId;\r\n  //         }\r\n  //     }\r\n  //     return url;\r\n  // }\r\n\r\n  // private async getResponse(url: string): Promise<any> {\r\n  //     console.log('BringService.get(' + url + ')');\r\n  //     const now = Date.now();\r\n  //     const validCacheTime = now - (this.options.cacheDuration * 60 * 1000);\r\n\r\n  //     // check timestamp\r\n  //     if (this.cache[url] && this.cache[url].timestamp < validCacheTime) {\r\n  //         delete (this.cache[url]);\r\n  //     }\r\n\r\n  //     if (!this.cache[url]) {\r\n  //         const response = await request.get(url, { json: true, resolveWithFullResponse: true }) as request.FullResponse;\r\n  //         if (response.statusCode !== 200) {\r\n  //             throw new Error(response.statusMessage);\r\n  //         }\r\n  //         this.cache[url] = {\r\n  //             timestamp: now,\r\n  //             result: response.body,\r\n  //             url\r\n  //         };\r\n  //     }\r\n\r\n  //     return this.cache[url].result;\r\n  // }\r\n\r\n  // GET /rest/v2/bringlists/b306f2d1-e3fd-4cb7-b700-6f5892582fbf HTTP/1.1\r\n  // Host: api.getbring.com\r\n  // Connection: keep-alive\r\n  // Pragma: no-cache\r\n  // Cache-Control: no-cache\r\n  // X-BRING-CLIENT-INSTANCE-ID: Web-vWfAI9GOTm8rryh0kf2fYMmzRSoDM4eW\r\n  // Origin: https://web.getbring.com\r\n  // X-BRING-API-KEY: cof4Nc6D8saplXjE3h3HXqHH8m7VU2i1Gs0g85Sp\r\n  // Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJleHAiOjE1NDUzMjQxMzgsInN1YiI6ImJyaW5nQHNjaGlya2FuLmRlIiwicHJpdmF0ZVV1aWQiOiJmNTNmZDgzNi04ZDkwLTRiZTgtOTFiMy0xYmZmNDE1MTViOTkifQ.A7brBFwODvphbmvJBG-hg-mICwuyR-jPnrnrsy5V-Mcp31iO91jn3_cWYuIh-scv7YYZ6Ma_9nMM9vvvm0Nw8w\r\n  // X-BRING-CLIENT-SOURCE: webApp\r\n  // Accept: application/json, text/plain, */*\r\n  // X-BRING-CLIENT: webApp\r\n  // X-BRING-USER-UUID: f53fd836-8d90-4be8-91b3-1bff41515b99\r\n  // User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36\r\n  // X-BRING-COUNTRY: DE\r\n  // DNT: 1\r\n  // Referer: https://web.getbring.com/app/lists/0\r\n  // Accept-Encoding: gzip, deflate, br\r\n  // Accept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7\r\n  // Cookie: _ga=GA1.2.651234461.1536857181; refresh_token=eyJhbGciOiJIUzUxMiJ9.eyJleHAiOjMxMTM2NTcxODIsInByaXZhdGVVdWlkIjoiZjUzZmQ4MzYtOGQ5MC00YmU4LTkxYjMtMWJmZjQxNTE1Yjk5In0.eolIXTK00-SJBQbGJPrUzqzzqG9Mezds4g0xeBtefyGZhtyxzFQWp37zTQGBPSNo_u7KxHLKE1f6BawjMYHt3Q; _gid=GA1.2.1697804451.1544719302; _gat_bringWebAppGeneralTracker=1\r\n\r\n}","import { IReactronServiceDefinition } from '@schirkan/reactron-interfaces';\r\nimport { BringService } from './services/BringService';\r\n\r\n// export interfaces\r\nexport * from '../common/interfaces/IBringService';\r\nexport * from '../common/interfaces/IBringServiceOptions';\r\n\r\n// export reactron service definition\r\nexport const services: IReactronServiceDefinition[] = [{\r\n    description: 'Service for getbring.com',\r\n    displayName: 'Shopping List',\r\n    fields: [{\r\n        displayName: 'Username',\r\n        description: 'Username',\r\n        name: 'username',\r\n        valueType: 'string',\r\n    },{\r\n        displayName: 'Password',\r\n        description: 'Password',\r\n        name: 'password',\r\n        valueType: 'string',\r\n    }],\r\n    name: 'BringService',\r\n    service: BringService\r\n}];"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA;AACA;IAAA;QAGU,UAAK,GAAkC,EAAE,CAAC;QAkC1C,iBAAY,GAAG,gCAAgC,CAAC;QAChD,cAAS,GAAG,EAAE,CAAC;QACf,kBAAa,GAAG,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAqL5B;IAvNc,4BAAK,GAAlB,UAAmB,OAAgC;uCAAG,OAAO;;gBAC3D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;;;;KACrC;IAEY,2BAAI,GAAjB;uCAAqB,OAAO;;gBAC1B,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;;;;KACpC;IAEY,iCAAU,GAAvB,UAAwB,OAA6B;uCAAG,OAAO;;gBAC7D,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;gBACzC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;;;KACxB;IAEM,iCAAU,GAAjB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAEY,8BAAO,GAApB;uCAAwB,OAAO;;gBAC7B,sBAAO;wBACL,IAAI,EAAE,MAAM;wBACZ,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE;4BACL,EAAE,IAAI,EAAE,QAAQ,EAAE;4BAClB,EAAE,IAAI,EAAE,MAAM,EAAE;yBACjB;qBACF,EAAC;;;KAIH;;;;;;;;;;;;;;;;IAsBO,4BAAK,GAAb,UAAc,KAAa,EAAE,QAAgB;QAC3C,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,YAAY,EAAE,SAAS,GAAG,KAAK,GAAG,YAAY,GAAG,QAAQ,CAAC,CAAC;KACvF;;IAGM,+BAAQ,GAAf;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;KAC1E;;IAGM,+BAAQ,GAAf,UAAgB,QAAgB,EAAE,aAAsB;QACtD,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,WAAW,GAAG,QAAQ,GAAG,2BAA2B,GAAG,aAAa,GAAG,sBAAsB,EAAE,IAAI,CAAC,CAAC;KACrK;;IAGM,iCAAU,GAAjB,UAAkB,QAAgB;QAChC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,4CAA4C,GAAG,QAAQ,GAAG,cAAc,EAAE,IAAI,CAAC,CAAC;KAChJ;;IAGM,iCAAU,GAAjB,UAAkB,MAAc;QAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,uBAAuB,EAAE,YAAY,GAAG,IAAI,CAAC,aAAa,GAAG,UAAU,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC;KACpH;;IAGM,mCAAY,GAAnB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,eAAe,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;KACvD;;IAGM,mCAAY,GAAnB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,aAAa,GAAG,IAAI,CAAC,SAAS,GAAG,WAAW,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;KACpF;;IAGM,gCAAS,GAAhB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,aAAa,GAAG,IAAI,CAAC,SAAS,GAAG,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;KACjF;;IAGM,0CAAmB,GAA1B,UAA2B,QAAgB;QACzC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,aAAa,GAAG,QAAQ,GAAG,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3E;IAEM,sCAAe,GAAtB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,oBAAoB,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;KAC7E;;IAGO,8BAAO,GAAf,UAAgB,IAAY,EAAE,GAAW,EAAE,SAAiB,EAAE,YAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAApB,6BAAA,EAAA,oBAAoB;;KAgCjF;IAEO,gCAAS,GAAjB;QACE,IAAM,MAAM,GAAG;YACb,2DAA2D;YAC3D,yBAAyB;YACzB,qBAAqB,GAAG,IAAI,CAAC,SAAS;YACtC,4BAA4B;YAC5B,qBAAqB;SACtB,CAAC;QACF,OAAO,MAAM,CAAC;KACf;IAuEH,mBAAC;CAAA,IAAA;;AClOD;AACA,IAAa,QAAQ,GAAiC,CAAC;QACnD,WAAW,EAAE,0BAA0B;QACvC,WAAW,EAAE,eAAe;QAC5B,MAAM,EAAE,CAAC;gBACL,WAAW,EAAE,UAAU;gBACvB,WAAW,EAAE,UAAU;gBACvB,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,QAAQ;aACtB,EAAC;gBACE,WAAW,EAAE,UAAU;gBACvB,WAAW,EAAE,UAAU;gBACvB,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,QAAQ;aACtB,CAAC;QACF,IAAI,EAAE,cAAc;QACpB,OAAO,EAAE,YAAY;KACxB,CAAC;;;;"}